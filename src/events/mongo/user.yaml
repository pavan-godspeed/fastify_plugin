# ONE
http.get./mongo/user/{id}:
  summary: Fetch User
  description: Fetch User from database
  fn: com.biz.mongo.user.one
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    200:
      content:
        application/json:
          schema:
            type: object

# CREATE
http.post./mongo/user:
  summary: Create a new User
  description: Create User from database
  fn: com.biz.mongo.user.create
  body:
    required: true
    content:
      application/json:
        schema:
          # $ref: '#/definitions/mongo/User'
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            email:
              type: string
            name:
              type: string
              nullable: true
            role:
              type: string
              default: USER
              enum:
                - USER
                - ADMIN
  responses:
    201:
      content:
        application/json:
          schema:
            type: object

# UPDATE
http.put./mongo/user/{id}:
  summary: Update a User
  description: Update User from database
  fn: com.biz.mongo.user.update
  body:
    required: true
    content:
      application/json:
        schema:
          # $ref: '#/definitions/mongo/User'
          type: object
          properties:
            createdAt:
              type: string
              format: date-time
            email:
              type: string
            name:
              type: string
              nullable: true
            role:
              type: string
              default: USER
              enum:
                - USER
                - ADMIN
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    204:
      content:
        application/json:
          schema:
            type: object

# DELETE
http.delete./mongo/user/{id}:
  summary: Delete a User
  description: Delete User from database
  fn: com.biz.mongo.user.delete
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    202:
      content:
        application/json:
          schema:
            type: object

# SEARCH
http.post./mongo/user/search:
  summary: Fetch multiple User
  description: Fetch multiple User from database
  authn: true
  fn: com.biz.mongo.user.search
  body:
    required: true
    content:
      application/json:
        schema:
          type: object
  responses:
    200:
      content:
        application/json:
          schema:
            type: array

